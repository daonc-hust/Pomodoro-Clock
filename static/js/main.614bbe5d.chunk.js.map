{"version":3,"sources":["constants/config.js","reducers/app.js","constants/actionTypes.js","reducers/index.js","components/layout/Footer.js","components/layout/Header.js","actions/app.js","components/Clock.js","components/Option.js","App.js","serviceWorker.js","index.js"],"names":["config","initialBreakLength","initialSessionLength","initialTimeLeftInSecond","initialState","breakLength","sessionLength","timeLeftInSecond","app","state","arguments","length","undefined","action","type","Object","objectSpread","time","combineReducers","Footer","react_default","a","createElement","className","href","Header","incrementBreak","decrementBreak","incrementSession","decrementSession","decreaseTimer","setTimeLeftInSecond","setBreakLengthDefault","Clock","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","formatTime","minute","Math","floor","second","concat","phaseControl","setState","label","audioBeep","current","play","dispatch","setTimeout","isStart","onReset","onDecreaseTimer","onStartStop","document","getElementById","disabled","timerInterval","clearInterval","setInterval","id","onClick","Component","connect","Option","incrementBreakLength","decrementBreakLength","incrementSessionLength","decrementSessionLength","App","React","createRef","components_Option","components_Clock","preload","src","ref","Boolean","window","location","hostname","match","store","createStore","reducer","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.614bbe5d.chunk.js","sourcesContent":["const config = {\n    initialBreakLength: 5,\n    initialSessionLength: 25,\n    initialTimeLeftInSecond: 1500\n}\n\nexport default config","import { INCREMENT_BREAK, INCREMENT_SESSION, DECREMENT_BREAK, DECREMENT_SESSION, DECREASE_TIMER, SET_TIME_LEFT_IN_SECOND, SET_BREAK_LENGTH } from'./../constants/actionTypes'\nimport config from './../constants/config'\n\nlet initialState = {\n    breakLength: config.initialBreakLength,\n    sessionLength: config.initialSessionLength,\n    timeLeftInSecond: config.initialTimeLeftInSecond\n}\n\nconst app = (state = initialState, action) => {\n    switch(action.type) {\n        case INCREMENT_BREAK:\n            return {\n                ...state,\n                breakLength: state.breakLength + 1\n            }\n        case DECREMENT_BREAK:\n            return {\n                ...state,\n                breakLength: state.breakLength - 1\n            }\n        case INCREMENT_SESSION:\n            return {\n                ...state,\n                sessionLength: state.sessionLength + 1,\n                timeLeftInSecond: state.timeLeftInSecond + 60\n            }\n        case DECREMENT_SESSION:\n            return {\n                ...state,\n                sessionLength: state.sessionLength - 1,\n                timeLeftInSecond: state.timeLeftInSecond - 60\n            }\n        case DECREASE_TIMER:\n            return {\n                ...state,\n                timeLeftInSecond: state.timeLeftInSecond - 1\n            }\n        case SET_TIME_LEFT_IN_SECOND:\n            return {\n                ...state,\n                timeLeftInSecond: action.time,\n                sessionLength: action.time / 60\n            }\n        case SET_BREAK_LENGTH:\n            return {\n                ...state,\n                breakLength: action.time\n            }\n        default:\n            return state\n    }\n}\n\nexport default app","export const INCREMENT_BREAK            = 'INCREMENT_BREAK'\nexport const DECREMENT_BREAK            = 'DECREASE_BREAK'\nexport const INCREMENT_SESSION          = 'INCREMENT_SESSION'\nexport const DECREMENT_SESSION          = 'DECREMENT_SESSION'\nexport const DECREASE_TIMER             = 'DECREASE_TIMER'\nexport const SET_TIME_LEFT_IN_SECOND    = 'SET_TIME_LEFT_IN_SECOND'\nexport const SET_BREAK_LENGTH   = 'SET_BREAK_LENGTH'","import { combineReducers } \tfrom 'redux';\nimport app  \t\t\t    from './app';\n\nexport default combineReducers({\n    app\n});","import React from 'react'\n\nexport default () => \n    <footer className=\"footer\">\n        Designed based on a pen by \n        <a href=\"https://codepen.io/eddyerburgh/full/yOjdqo/\"> Edd Yerburgh </a>\n        and coded by \n        <a href=\"https://github.com/daonc-hust/Pomodoro-Clock\"> DaoNC</a>.\n    </footer>\n","import React from \"react\"\n\nexport default () => <header><h2>Pomodoro Clock</h2></header>","import { \n    INCREMENT_BREAK, INCREMENT_SESSION, SET_TIME_LEFT_IN_SECOND,\n    DECREMENT_BREAK, DECREMENT_SESSION, DECREASE_TIMER, SET_BREAK_LENGTH } from \"./../constants/actionTypes\";\n\nexport const incrementBreak = () => {\n    return {    \n        type: INCREMENT_BREAK\n    }\n}\n\nexport const decrementBreak = () => {\n    return {    \n        type: DECREMENT_BREAK,\n    }\n}\n\nexport const incrementSession = () => {\n    return {    \n        type: INCREMENT_SESSION\n    }\n}\n\nexport const decrementSession = () => {\n    return {    \n        type: DECREMENT_SESSION\n    }\n}\n\nexport const decreaseTimer = () => {\n    return {\n        type: DECREASE_TIMER\n    }\n}\n\nexport const setTimeLeftInSecond = (time) => {\n    return {\n        type: SET_TIME_LEFT_IN_SECOND,\n        time\n    }\n}\n\nexport const setBreakLengthDefault = (time) => {\n    return {\n        type: SET_BREAK_LENGTH,\n        time\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { decreaseTimer, setTimeLeftInSecond, setBreakLengthDefault } from './../actions/app'\nimport config from './../constants/config'\n\nclass Clock extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isStart: false,\n            timerInterval: null,\n            label: \"Session\"\n        }\n    }\n\n    formatTime = (timeLeftInSecond) => {\n        let minute = Math.floor(timeLeftInSecond / 60);\n        if (minute < 10) minute = '0' + minute;\n\n        let second = timeLeftInSecond - 60 * minute;\n        if (second < 10) second = '0' + second;\n\n        return `${minute}:${second}`;\n    }\n\n    phaseControl = () => {\n        if(this.props.timeLeftInSecond === 0) {\n            this.setState({ label : \"Break\"})\n            this.props.audioBeep.current.play();\n        } else if (this.props.timeLeftInSecond === -1) {\n            this.props.dispatch(setTimeLeftInSecond(this.props.breakLength * 60))\n            setTimeout(() => {\n                this.setState({ label : \"Session\", isStart: !this.state.isStart})\n                this.onReset()\n            },this.props.breakLength * 60 * 1000)\n        }\n    }\n\n    onDecreaseTimer = () => {\n        this.props.dispatch(decreaseTimer())\n    }\n\n    onStartStop = () => {\n        this.setState({ isStart: !this.state.isStart })\n\n        if(!this.state.isStart) {\n            document.getElementById('break-decrement').disabled = true;\n            document.getElementById('break-increment').disabled = true;\n            document.getElementById('session-decrement').disabled = true;\n            document.getElementById('session-increment').disabled = true;\n\n            this.setState({\n                timerInterval: setInterval(() => {\n                    this.onDecreaseTimer()\n                    this.phaseControl()\n                }, 1000)\n            })\n        } else {\n            document.getElementById('break-decrement').disabled = false;\n            document.getElementById('break-increment').disabled = false;\n            document.getElementById('session-decrement').disabled = false;\n            document.getElementById('session-increment').disabled = false;\n\n            this.state.timerInterval && clearInterval(this.state.timerInterval);\n        }\n    }\n\n    onReset = () => {\n        this.setState({ isStart: false, timerInterval: null})\n        this.state.timerInterval && clearInterval(this.state.timerInterval);\n        this.props.dispatch(setTimeLeftInSecond(config.initialTimeLeftInSecond))\n        this.props.dispatch(setBreakLengthDefault(config.initialBreakLength))\n    }\n\n    render() {\n        return (\n            <div className=\"times\">\n                <div className=\"times-content\">\n                    <label id=\"timer-label\">{this.state.label}</label>\n                    <span id=\"time-left\">{this.formatTime(this.props.timeLeftInSecond)}</span>\n                </div>\n                <div className=\"controller\">\n                    <button onClick={this.onStartStop} id=\"start_stop\">{this.state.isStart ? \"Stop\" : \"Start\"}</button>\n                    <button onClick={this.onReset} id=\"reset\">Reset</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToPropsTop(state) {\n    return {\n        sessionLength   : state.app.sessionLength,\n        breakLength     : state.app.breakLength,\n        timeLeftInSecond: state.app.timeLeftInSecond\n    }\n}\n\nexport default connect(mapStateToPropsTop)(Clock)","import React, { Component } from 'react'\nimport { connect }          from 'react-redux'\nimport { \n    incrementBreak, incrementSession, \n    decrementBreak, decrementSession } from './../actions/app'\n\nclass Option extends Component {\n\n    incrementBreakLength = () => {\n        this.props.dispatch(incrementBreak())\n    }\n\n    decrementBreakLength = () => {\n        if(this.props.breakLength > 0) {\n            this.props.dispatch(decrementBreak())\n        }\n    }\n\n    incrementSessionLength = () => {\n        this.props.dispatch(incrementSession())\n    }\n\n    decrementSessionLength = () => {\n        if(this.props.sessionLength > 0) {\n            this.props.dispatch(decrementSession())\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"settings\">\n                <div className=\"settings-section\">\n                    <label id=\"label\">Break Length</label>\n                    <div id=\"setting\">\n                        <button onClick={this.decrementBreakLength}  id=\"break-decrement\">-</button>\n                        <span id=\"break-length\">{this.props.breakLength}</span>\n                        <button onClick={this.incrementBreakLength} id=\"break-increment\">+</button>\n                    </div>\n                </div>\n                <div className=\"settings-section\">\n                    <label id=\"label\">Session Length</label>\n                    <div id=\"setting\">\n                        <button onClick={this.decrementSessionLength} id=\"session-decrement\">-</button>\n                        <span id=\"session-length\">{this.props.sessionLength}</span>\n                        <button onClick={this.incrementSessionLength} id=\"session-increment\">+</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToPropsTop(state) {\n\treturn {\n        sessionLength : state.app.sessionLength,\n        breakLength : state.app.breakLength\n\t}\n}\n\nexport default connect(mapStateToPropsTop) (Option)","import React, { Component } from 'react'\nimport { Header, Footer, Clock, Option } from './components'\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.audioBeep = React.createRef();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header />\n                    <Option timeLeftInSecond={this.props.sessionLength}/>\n                    <Clock audioBeep={this.audioBeep}/>\n                    <audio id=\"beep\" preload=\"auto\" src=\"https://goo.gl/65cBl1\" ref={this.audioBeep}></audio>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider }             from 'react-redux';\nimport { \n    createStore \n}                               from 'redux';\nimport reducer                  from './reducers';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}